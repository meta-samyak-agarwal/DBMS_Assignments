1) Display Recent 50 Orders placed (Id, Order Date, Order Total).

SELECT * 
FROM Orders
ORDER BY order_date DESC
LIMIT 50;



2) Display 10 most expensive Orders.

SELECT * 
FROM Orders
ORDER BY cart_value DESC
LIMIT 10;


3) Display all the Orders which are placed more than 10 days old and 
    one or more items from those orders are still not shipped.


SELECT o.* FROM Orders o
INNER JOIN Order_item oi ON oi.order_id = o.order_id
INNER JOIN order_status os ON  os.order_item_id = oi.order_item_id
WHERE os.status != 'SHIPPED' 
AND o.order_date < NOW() - INTERVAL 10 DAY;



4) Display list of shoppers which haven't ordered anything since last month.
(used the left join coz , there maybe a shopper who havent order anything , if we use the inner join here

SELECT *
FROM Users
LEFT JOIN Orders ON Users.user_id = Orders.user_id
WHERE 
    Users.type = 'SHOPPER' 
    AND (Orders.order_date IS NULL OR Orders.order_date < NOW() - INTERVAL 30 DAY)
ORDER BY 
    Users.created_at ASC;



5) Display list of shopper along with orders placed by them in last 15 days. 

SELECT *
FROM Orders
WHERE 
    order_date >= CURRENT_DATE - INTERVAL 15 DAY
ORDER BY 
    order_date DESC;



6) Display list of order items which are in “shipped” state for particular Order Id)


SELECT *
FROM Order_item oi
INNER JOIN 
    Order_Status os ON oi.order_item_id = os.order_item_id
WHERE 
    oi.order_id = 9 
    AND os.status = 'shipped'; 



7) Display list of order items along with order placed date which fall between Rs 20 to Rs 50 price.

 
SELECT oi.order_item_id, p.product_name, p.price, o.order_date
FROM Order_item oi
INNER JOIN 
    Orders o ON oi.order_id = o.order_id
INNER JOIN 
    Product p ON oi.order_item_id = p.order_item_id
WHERE 
    p.price BETWEEN 20 AND 50
ORDER BY 
    o.order_date;

