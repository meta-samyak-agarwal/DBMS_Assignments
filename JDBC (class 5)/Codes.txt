		                          					Assignment 1:


Given the id of a user, fetch all orders (Id, Order Date, Order Total) of that user which are in shipped state. Orders should be sorted by order date column in chronological order.

(assume that a order can be in shipped state if all its order_item are in the shipped state)
 
 

SELECT 
    o.order_id, 
    o.order_date, 
    o.cart_value
FROM 
    Users u
INNER JOIN 
    Orders o ON o.user_id = u.user_id
WHERE 
    u.user_id = "1" 
    AND NOT EXISTS (
        SELECT *
        FROM Order_Item oi
        LEFT JOIN 
             Order_status os ON os.order_item_id = oi.order_item_id
        WHERE oi.order_id = o.order_id 
          AND os.status != 'shipped'
    )
ORDER BY 
    o.order_date;





                                               Assignment 2:


Insert five or more images of a product using batch insert technique.


Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mydatabase", "root", "root");
PreparedStatement ps = connection.prepareStatement("INSERT INTO Users (user_id, name, email) VALUES (?, ?, ?)");

ps.setInt(1, 1);
ps.setString(2, "John");
ps.setString(3, "john@example.com");
ps.addBatch();

ps.setInt(1, 2);
ps.setString(2, "Jane");
ps.setString(3, "jane@example.com");
ps.addBatch();

ps.setInt(1, 3);
ps.setString(2, "Alice");
ps.setString(3, "alice@example.com");
ps.addBatch();

ps.executeBatch(); // Executes all the statements in a single batch
connection.close();




				                            		Assignment 3:


Delete all those products which were not ordered by any Shopper in last 1 year. Return the number of products deleted.

DELETE FROM Product 
WHERE product_id NOT IN (
     SELECT DISTINCT oi.product_id
     FROM Orders o 
     INNER JOIN 
          Order_Item oi ON oi.order_id = o.order_id
     INNER JOIN 
          Users u ON  u.user_id = o.user_id
     WHERE 
          o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR)  AND  u.type = "SHOPPER"
);




					                      		Assignment 4:



Select and display the category title of all top parent categories sorted alphabetically and the count of their child categories.


SELECT 
   c.category_name AS TITLE,
   COUNT(c.category_id)
FROM Category c
LEFT JOIN Child_category cc
ON cc.category_id = c.category_id
GROUP BY TITLE
ORDER BY TITLE;


